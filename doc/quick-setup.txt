
  (This could be much improved, maybe written in pandoc or something)

  i s t h m u s
  Quick Setup guide                                               2025.05.19

------------------------------------------------------------------------------

  Base setup

$ git clone https://github.com/lickx/isthmus.git 
$ cd isthmus/bin
$ ./setup

  (Follow instructions on screen)

  To install the simulator software, this can be done now:
  * Note the lickx version of opensim is strongly recommended for
    compatibility! (opensim-lickx)

$ ./rtinstall ~/Downloads/opensim-0.9.2.0.zip

------------------------------------------------------------------------------

  Database setup

  Only do the following if you never set up MariaDB or MySQL on this
  server. Notice the -i used with sudo, which is needed in this case!:

$ sudo -i mysql_secure_installation
(Follow the instructions on screen. Press enter when asked for the old
password (it's blank). Next you will make a new password of your own
choice. For all other questions asked, accept the defaults.)

  !! IMPORTANT
  The default 16M packet size is no longer enough for running OpenSim with
  sql. Edit your mariadb/mysql config to set it higher. In Ubuntu this is
  /etc/mysql/mariadb.conf.d/50-server.cnf:

  max_allowed_packet      = 32M

  In that same 50-server.cnf file, also set the default charset to 'utf8'.
  Do NOT set it to utfmb4, it will cause problems with OpenSim:

  character-set-server  = utf8
  collation-server      = utf8_general_ci


  For now it is assumed you will be making a new database for each
  installation of Isthmus. The database will be shared among all regions.
  Each region will run in its own simulator instance, which is managed by
  GNU Screen.

$ sudo mysql --user root --password
MariaDB [(none)]> create database isthmus_gridname;
MariaDB [(none)]> grant all on isthmus_gridname.* to opensim@localhost identified by 'PASSWORD';
MariaDB [(none)]> quit

  If you will be using Gloebit currency, make a seperate database for it:

$ sudo mysql --user root --password
MariaDB [(none)]> create database gloebit_gridname;
MariaDB [(none)]> grant all on gloebit_gridname.* to opensim@localhost identified by 'PASSWORD';
MariaDB [(none)]> quit

$ ./rtinstall ~/Downloads/gloebit-lickx.zip
(edit config in etc/addins/Gloebit.ini.example)

  If you want server-stored mutes:
  Both 'mutelist.sql' and the php helper is included in opensimmutelist-lickx.
  * Note you'll also have to setup the php helper!

$ ./rtinstall ~/Downloads/opensimmutelist-lickx.zip
$ sudo mysql --user root --password
MariaDB [(none)]> create database mutelist_gridname;
MariaDB [(none)]> grant all on mutelist_gridname.* to opensim@localhost identified by 'PASSWORD';
MariaDB [(none)]> quit

$ cd ../runtime/extra/OpenSimMutelist
$ mysql --user opensim --password
MariaDB [(none)]> use mutelist_gridname;
MariaDB [(none)]> source mutelist.sql;
MariaDB [(none)]> quit

  For a working search engine we need to create the search tables.
  Both 'search.sql' and the php helper is included in opensimsearch-lickx.
  * Note this module is modified from the original and prefixes tables
  with 'search_'!
  * Note you'll also need to setup the php helper!

$ ./rtinstall ~/Downloads/opensimsearch-lickx.zip
$ cd ../runtime/extra/OpenSimSearch
$ mysql --user opensim --password
MariaDB [(none)]> use isthmus_gridname;
MariaDB [(none)]> source search.sql;
MariaDB [(none)]> quit

Todo: Improve this section, setup mutelist and search helpers.
- Copy the 'helper' folder to your webserver, and fill in the database logins
  for each module within (databaseinfo.ini)
- Edit etc/grid.ini as follows:
- Comment out the [MuteListService] section, that's for the default/basic
  module and not needed with the improved OpenSimMutelist module
- [Messaging] needs:
MuteListModule = OpenSimMutelist
MuteListURL = "https://example.com/helper/mute/mutelist.php"
- [DataSnapshot] needs:
data_services="https://example.com/helper/search/register.php"
- [Search] needs:
Module = "OpenSimSearch"
SearchURL = https://example.com/helper/search/query.php

------------------------------------------------------------------------------

  Setting up Isthmus

$ cd isthmus/bin
$ ./setup

  Afterwards, edit ../etc/database.ini and fill in the database for
  isthmus ('isthmus_grid'), and mysql username and password that you
  granted to that database above.

------------------------------------------------------------------------------

  Adding your first simulator

  If you chose 'microgrid' or 'microgrid-nohg' when using setup before,
  then now it is time to start robust. Else skip to the simadd bit.

$ ./robust start
start all robust instances? (y/n): y

  Verify robust runs ok:

$ ./robust status
assets - online (8010)
inventory - online (8011)
login - online (8012)
map - online (8013)
presence - online (8014)
robust - online (8015)
xbakes - online (8016)

  To stop robust:

$ ./robust stop
start all robust instances? (y/n): n

  To create a new user manually, attach the login robust:

$ screen -r isthmus-login
(note 'isthmus' is the name of this isthmus folder. If you renamed the
isthmus folder to 'mygrid' the main robust will be mygrid-login)

  ..and type the following in the robust console you're now in:

R.O.B.U.S.T.# help create user

  Now type 'create user' and follow instructions. When done, detach the
  robust console by pressing <CTRL-A D>

  Edit etc/estate.ini, and change DefaultEstateName (to anything) and
  DefaultEstateOwnerName (to the user you just created)

  Now that we have a user, we can add the first sim. I suggest to call it
  'Welcome' if it is your own grid because robust will use that as the default
  region:

$ ./simadd
(Follow instructions on screen)

  To start the newly made sim:

$ ./simctl start Welcome
[ Welcome ] Starting.. ok

  Verify all sims are running, and on which port:

$ ./simctl status
Welcome - online (9000)

  Finally, login to the grid and see if everything runs ok.

------------------------------------------------------------------------------

  Command line commands

$ cd ~/isthmus/bin

  For a single simulator:

  Start:    ./simctl start SimName
  Stop:     ./simctl stop SimName
  Restart:  ./simctl restart SimName
  Status:   ./simctl status SimName

  If you don't give a SimName, it will do the action for all enabled sims.
  To see more options, type without parameters:   ./simctl

------------------------------------------------------------------------------

  Autobackup

  To setup autobackup, refer to etc/autobackup.ini

  You can store the OARs in any folder/mountpoint. For remote backups, specify
  a remote or cloud storage mountpoint such as your DropBox folder.

  However, we recommend instead of the autobackup module, to use a scheduled
  cronjob using simbackup. Refer to doc/crontab

------------------------------------------------------------------------------

  Optional modules

  To set up voice support provided by Vivox, refer to etc/voice.ini
  To set up Gloebit currency, refer to etc/addins/Gloebit.ini, this requires
  an additional module (.dll) to be installed.

------------------------------------------------------------------------------
